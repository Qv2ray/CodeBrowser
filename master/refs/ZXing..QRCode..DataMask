<def f='qv2ray/3rdparty/zxing-cpp/core/src/qrcode/QRDataMask.h' l='36' ll='57'/>
<size>8</size>
<doc f='qv2ray/3rdparty/zxing-cpp/core/src/qrcode/QRDataMask.h' l='25'>/**
* &lt;p&gt;Encapsulates data masks for the data bits in a QR code, per ISO 18004:2006 6.8. Implementations
* of this class can un-mask a raw BitMatrix. For simplicity, they will unmask the entire BitMatrix,
* including areas used for finder patterns, timing patterns, etc. These areas should be unused
* after the point they are unmasked anyway.&lt;/p&gt;
*
* &lt;p&gt;Note that the diagram in section 6.8.1 is misleading since it indicates that i is column position
* and j is row position. In fact, as the text says, i is row position and j is column position.&lt;/p&gt;
*
* @author Sean Owen
*/</doc>
<fun r='_ZN5ZXing6QRCode8DataMaskC1Ei'/>
<fun r='_ZNK5ZXing6QRCode8DataMask15unmaskBitMatrixERNS_9BitMatrixEi'/>
<mbr r='ZXing::QRCode::DataMask::_isMasked' o='0' t='bool (*)(int, int)'/>
<fun r='_ZN5ZXing6QRCode8DataMaskC1Ei'/>
<fun r='_ZNK5ZXing6QRCode8DataMask15unmaskBitMatrixERNS_9BitMatrixEi'/>
<use f='qv2ray/3rdparty/zxing-cpp/core/src/qrcode/QRDecoder.cpp' l='464' c='_ZN5ZXing6QRCodeL6ReMaskERNS_9BitMatrixERKNS0_17FormatInformationE'/>
<size>8</size>
