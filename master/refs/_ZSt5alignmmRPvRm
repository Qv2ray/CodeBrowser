<def f='include/c++/10/memory' l='122' ll='142' type='void * std::align(std::size_t __align, std::size_t __size, void *&amp; __ptr, std::size_t &amp; __space)'/>
<doc f='include/c++/10/memory' l='104'>/**
 *  @brief Fit aligned storage in buffer.
 *  @ingroup memory
 *
 *  This function tries to fit @a __size bytes of storage with alignment
 *  @a __align into the buffer @a __ptr of size @a __space bytes.  If such
 *  a buffer fits then @a __ptr is changed to point to the first byte of the
 *  aligned storage and @a __space is reduced by the bytes used for alignment.
 *
 *  C++11 20.6.5 [ptr.align]
 *
 *  @param __align   A fundamental or extended alignment value.
 *  @param __size    Size of the aligned storage required.
 *  @param __ptr     Pointer to a buffer of @a __space bytes.
 *  @param __space   Size of the buffer pointed to by @a __ptr.
 *  @return the updated pointer if the aligned storage fits, otherwise nullptr.
 *
 */</doc>
<use f='include/c++/10/memory_resource' l='642' u='c' c='_ZNSt3pmr25monotonic_buffer_resource11do_allocateEmm'/>
