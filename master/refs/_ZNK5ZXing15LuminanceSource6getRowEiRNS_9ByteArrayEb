<dec f='qv2ray/3rdparty/zxing-cpp/core/src/LuminanceSource.h' l='61' type='const uint8_t * ZXing::LuminanceSource::getRow(int y, ZXing::ByteArray &amp; buffer, bool forceCopy = false) const'/>
<ovr f='qv2ray/3rdparty/zxing-cpp/core/src/GenericLuminanceSource.cpp' l='119' c='_ZNK5ZXing22GenericLuminanceSource6getRowEiRNS_9ByteArrayEb'/>
<doc f='qv2ray/3rdparty/zxing-cpp/core/src/LuminanceSource.h' l='49'>/**
	* Fetches one row of luminance data from the underlying platform&apos;s bitmap. Values range from
	* 0 (black) to 255 (white). Because Java does not have an unsigned byte type, callers will have
	* to bitwise and with 0xff for each value. It is preferable for implementations of this method
	* to only fetch this row rather than the whole image, since no 2D Readers may be installed and
	* getMatrix() may never be called.
	*
	* @param y The row to fetch, which must be in [0,getHeight())
	* @param row An optional preallocated array. If null or too small, it will be ignored.
	*            Always use the returned object, and ignore the .length of the array.
	* @return An array containing the luminance data.
	*/</doc>
<use f='qv2ray/3rdparty/zxing-cpp/core/src/GlobalHistogramBinarizer.cpp' l='127' u='c' c='_ZNK5ZXing24GlobalHistogramBinarizer11getBlackRowEiRNS_8BitArrayE'/>
<use f='qv2ray/3rdparty/zxing-cpp/core/src/GlobalHistogramBinarizer.cpp' l='162' u='c' c='_ZNK5ZXing24GlobalHistogramBinarizer13getPatternRowEiRSt6vectorItSaItEE'/>
<use f='qv2ray/3rdparty/zxing-cpp/core/src/GlobalHistogramBinarizer.cpp' l='214' u='c' c='_ZN5ZXingL15InitBlackMatrixERKNS_15LuminanceSourceERSt10shared_ptrIKNS_9BitMatrixEE'/>
<ovr f='qv2ray/3rdparty/zxing-cpp/core/src/LuminanceSource.cpp' l='42' c='_ZNK5ZXing12_GLOBAL__N_123InvertedLuminanceSource6getRowEiRNS_9ByteArrayEb'/>
<use f='qv2ray/3rdparty/zxing-cpp/core/src/LuminanceSource.cpp' l='44' u='c' c='_ZNK5ZXing12_GLOBAL__N_123InvertedLuminanceSource6getRowEiRNS_9ByteArrayEb'/>
