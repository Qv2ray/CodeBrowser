<inh f='qv2ray/3rdparty/uvw/src/uvw/stream.h' l='128' c='uvw::StreamHandle'/>
<def f='qv2ray/3rdparty/uvw/src/uvw/tty.h' l='57' ll='145'/>
<use f='qv2ray/3rdparty/uvw/src/uvw/tty.h' l='57'/>
<size>448</size>
<doc f='qv2ray/3rdparty/uvw/src/uvw/tty.h' l='39'>/**
 * @brief The TTYHandle handle.
 *
 * TTY handles represent a stream for the console.
 *
 * To create a `TTYHandle` through a `Loop`, arguments follow:
 *
 * * A valid FileHandle. Usually the file descriptor will be:
 *     * `uvw::StdIN` or `0` for `stdin`
 *     * `uvw::StdOUT` or `1` for `stdout`
 *     * `uvw::StdERR` or `2` for `stderr`
 * * A boolean value that specifies the plan on calling `read()` with this
 * stream. Remember that `stdin` is readable, `stdout` is not.
 *
 * See the official
 * [documentation](http://docs.libuv.org/en/v1.x/tty.html#c.uv_tty_init)
 * for further details.
 */</doc>
<fun r='_ZN3uvw9TTYHandle13resetModeMemoEv'/>
<fun r='_ZN3uvw9TTYHandleC1ENS_14UnderlyingTypeIS0_8uv_tty_sE17ConstructorAccessESt10shared_ptrINS_4LoopEENS_7details13UVTypeWrapperIiEEb'/>
<fun r='_ZN3uvw9TTYHandle4initEv'/>
<fun r='_ZN3uvw9TTYHandle4modeENS_7details10UVTTYModeTE'/>
<fun r='_ZN3uvw9TTYHandle5resetEv'/>
<fun r='_ZN3uvw9TTYHandle10getWinSizeEv'/>
<fun r='_ZNK3uvw9TTYHandle10vtermStateENS_7details16UVTTYVTermStateTE'/>
<fun r='_ZNK3uvw9TTYHandle10vtermStateEv'/>
<mbr r='uvw::TTYHandle::memo' o='3392' t='std::shared_ptr&lt;details::ResetModeMemo&gt;'/>
<mbr r='uvw::TTYHandle::fd' o='3520' t='FileHandle::Type'/>
<mbr r='uvw::TTYHandle::rw' o='3552' t='int'/>
<fun r='_ZN3uvw9TTYHandleC1ENS_14UnderlyingTypeIS0_8uv_tty_sE17ConstructorAccessESt10shared_ptrINS_4LoopEENS_7details13UVTypeWrapperIiEEb'/>
<fun r='_ZN3uvw9TTYHandle13resetModeMemoEv'/>
<fun r='_ZN3uvw9TTYHandle4initEv'/>
<fun r='_ZN3uvw9TTYHandle4modeENS_7details10UVTTYModeTE'/>
<fun r='_ZN3uvw9TTYHandle5resetEv'/>
<fun r='_ZN3uvw9TTYHandle10getWinSizeEv'/>
<fun r='_ZNK3uvw9TTYHandle10vtermStateENS_7details16UVTTYVTermStateTE'/>
<fun r='_ZNK3uvw9TTYHandle10vtermStateEv'/>
