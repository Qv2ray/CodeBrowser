<dec f='qv2ray/3rdparty/uvw/src/uvw/dns.h' l='130' type='void uvw::GetAddrInfoReq::addrInfo(std::string node, std::string service, addrinfo * hints = nullptr)'/>
<def f='qv2ray/3rdparty/uvw/src/uvw/dns.cpp' l='72' ll='74' type='void uvw::GetAddrInfoReq::addrInfo(std::string node, std::string service, addrinfo * hints = nullptr)'/>
<doc f='qv2ray/3rdparty/uvw/src/uvw/dns.h' l='123'>/**
     * @brief Async [getaddrinfo](http://linux.die.net/man/3/getaddrinfo).
     * @param node Either a numerical network address or a network hostname.
     * @param service Either a service name or a port number as a string.
     * @param hints Optional `addrinfo` data structure with additional address
     * type constraints.
     */</doc>
<use f='qv2ray/src/components/latency/DNSBase.hpp' l='44' u='c' c='_ZN6Qv2ray10components7latency7DNSBase16async_DNS_lookupEOTL0__OTL0_0_'/>
