<dec f='qv2ray/3rdparty/zxing-cpp/core/src/pdf417/PDFScanningDecoder.h' l='34' type='static ZXing::DecoderResult ZXing::Pdf417::ScanningDecoder::Decode(const ZXing::BitMatrix &amp; image, const Nullable&lt;ZXing::ResultPoint&gt; &amp; imageTopLeft, const Nullable&lt;ZXing::ResultPoint&gt; &amp; imageBottomLeft, const Nullable&lt;ZXing::ResultPoint&gt; &amp; imageTopRight, const Nullable&lt;ZXing::ResultPoint&gt; &amp; imageBottomRight, int minCodewordWidth, int maxCodewordWidth)'/>
<use f='qv2ray/3rdparty/zxing-cpp/core/src/pdf417/PDFReader.cpp' l='77' u='c' c='_ZN5ZXing6Pdf4178DoDecodeERKNS_12BinaryBitmapEbRNSt7__cxx114listINS_6ResultESaIS6_EEE'/>
<def f='qv2ray/3rdparty/zxing-cpp/core/src/pdf417/PDFScanningDecoder.cpp' l='689' ll='754' type='static ZXing::DecoderResult ZXing::Pdf417::ScanningDecoder::Decode(const ZXing::BitMatrix &amp; image, const Nullable&lt;ZXing::ResultPoint&gt; &amp; imageTopLeft, const Nullable&lt;ZXing::ResultPoint&gt; &amp; imageBottomLeft, const Nullable&lt;ZXing::ResultPoint&gt; &amp; imageTopRight, const Nullable&lt;ZXing::ResultPoint&gt; &amp; imageBottomRight, int minCodewordWidth, int maxCodewordWidth)'/>
<doc f='qv2ray/3rdparty/zxing-cpp/core/src/pdf417/PDFScanningDecoder.cpp' l='685'>// TODO don&apos;t pass in minCodewordWidth and maxCodewordWidth, pass in barcode columns for start and stop pattern
// columns. That way width can be deducted from the pattern column.
// This approach also allows to detect more details about the barcode, e.g. if a bar type (white or black) is wider 
// than it should be. This can happen if the scanner used a bad blackpoint.</doc>
