<inh f='qv2ray/3rdparty/uvw/src/uvw/handle.hpp' l='30' c='uvw::Handle'/>
<def f='qv2ray/3rdparty/uvw/src/uvw/async.h' l='29' ll='56'/>
<use f='qv2ray/3rdparty/uvw/src/uvw/async.h' l='29'/>
<use f='qv2ray/3rdparty/uvw/src/uvw/async.cpp' l='12' c='_ZN3uvw11AsyncHandle12sendCallbackEP10uv_async_s'/>
<use f='qv2ray/3rdparty/uvw/src/uvw/async.cpp' l='12' c='_ZN3uvw11AsyncHandle12sendCallbackEP10uv_async_s'/>
<size>240</size>
<doc f='qv2ray/3rdparty/uvw/src/uvw/async.h' l='21'>/**
 * @brief The AsyncHandle handle.
 *
 * Async handles allow the user to _wakeup_ the event loop and get an event
 * emitted from another thread.
 *
 * To create an `AsyncHandle` through a `Loop`, no arguments are required.
 */</doc>
<fun r='_ZN3uvw11AsyncHandle12sendCallbackEP10uv_async_s'/>
<fun r='_ZN3uvw11AsyncHandle4initEv'/>
<fun r='_ZN3uvw11AsyncHandle4sendEv'/>
<fun r='_ZN3uvw11AsyncHandle12sendCallbackEP10uv_async_s'/>
<fun r='_ZN3uvw11AsyncHandle4initEv'/>
<fun r='_ZN3uvw11AsyncHandle4sendEv'/>
