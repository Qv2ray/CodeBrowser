<dec f='include/x86_64-linux-gnu/sys/epoll.h' l='109' type='int epoll_ctl(int __epfd, int __op, int __fd, struct epoll_event * __event)'/>
<use f='qv2ray/3rdparty/libuv/src/unix/linux-core.c' l='165' u='c' c='uv__platform_invalidate_fd'/>
<use f='qv2ray/3rdparty/libuv/src/unix/linux-core.c' l='179' u='c' c='uv__io_check_fd'/>
<use f='qv2ray/3rdparty/libuv/src/unix/linux-core.c' l='184' u='c' c='uv__io_check_fd'/>
<use f='qv2ray/3rdparty/libuv/src/unix/linux-core.c' l='250' u='c' c='uv__io_poll'/>
<use f='qv2ray/3rdparty/libuv/src/unix/linux-core.c' l='257' u='c' c='uv__io_poll'/>
<use f='qv2ray/3rdparty/libuv/src/unix/linux-core.c' l='394' u='c' c='uv__io_poll'/>
<doc f='include/x86_64-linux-gnu/sys/epoll.h' l='103'>/* Manipulate an epoll instance &quot;epfd&quot;. Returns 0 in case of success,
   -1 in case of error ( the &quot;errno&quot; variable will contain the
   specific error code ) The &quot;op&quot; parameter is one of the EPOLL_CTL_*
   constants defined above. The &quot;fd&quot; parameter is the target of the
   operation. The &quot;event&quot; parameter describes which events the caller
   is interested in and any associated user data.  */</doc>
