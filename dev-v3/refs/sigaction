<def f='include/x86_64-linux-gnu/bits/sigaction.h' l='27' ll='53'/>
<dec f='include/signal.h' l='240' type='int sigaction(int __sig, const struct sigaction *__restrict __act, struct sigaction *__restrict __oact)'/>
<use f='include/signal.h' l='240' c='sigaction'/>
<use f='include/signal.h' l='241' c='sigaction'/>
<size>152</size>
<doc f='include/signal.h' l='239'>/* Get and/or set the action for signal SIG.  */</doc>
<doc f='include/x86_64-linux-gnu/bits/sigaction.h' l='26'>/* Structure describing the action to be taken when a signal arrives.  */</doc>
<mbr r='sigaction::__sigaction_handler' o='0' t='union (anonymous union at /usr/include/x86_64-linux-gnu/bits/sigaction.h:31:5)'/>
<mbr r='sigaction::sa_mask' o='64' t='__sigset_t'/>
<mbr r='sigaction::sa_flags' o='1088' t='int'/>
<mbr r='sigaction::sa_restorer' o='1152' t='void (*)(void)'/>
<use f='qv2ray/3rdparty/libuv/src/unix/signal.c' l='224' c='uv__signal_register_handler'/>
<use f='qv2ray/3rdparty/libuv/src/unix/signal.c' l='236' u='c' c='uv__signal_register_handler'/>
<use f='qv2ray/3rdparty/libuv/src/unix/signal.c' l='245' c='uv__signal_unregister_handler'/>
<use f='qv2ray/3rdparty/libuv/src/unix/signal.c' l='254' u='c' c='uv__signal_unregister_handler'/>
<size>152</size>
<use f='qv2ray/test/catch.hpp' l='8014'/>
<use f='qv2ray/test/catch.hpp' l='10822' c='_ZN5Catch21FatalConditionHandlerC1Ev'/>
<use f='qv2ray/test/catch.hpp' l='10827' u='c' c='_ZN5Catch21FatalConditionHandlerC1Ev'/>
<use f='qv2ray/test/catch.hpp' l='10839' u='c' c='_ZN5Catch21FatalConditionHandler5resetEv'/>
<use f='qv2ray/test/catch.hpp' l='10848'/>
<size>152</size>
