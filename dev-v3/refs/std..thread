<def f='include/c++/10/thread' l='73' ll='289'/>
<use f='include/c++/10/thread' l='99'/>
<use f='include/c++/10/thread' l='125'/>
<use f='include/c++/10/thread' l='160' c='_ZNSt6threadC1ERKS_'/>
<use f='include/c++/10/thread' l='162' c='_ZNSt6threadC1EOS_'/>
<use f='include/c++/10/thread' l='165' c='_ZNSt6threadaSERKS_'/>
<use f='include/c++/10/thread' l='165' c='_ZNSt6threadaSERKS_'/>
<use f='include/c++/10/thread' l='167' c='_ZNSt6threadaSEOS_'/>
<use f='include/c++/10/thread' l='167' c='_ZNSt6threadaSEOS_'/>
<use f='include/c++/10/thread' l='176' c='_ZNSt6thread4swapERS_'/>
<use f='include/c++/10/thread' l='292' c='_ZSt4swapRSt6threadS0_'/>
<use f='include/c++/10/thread' l='292' c='_ZSt4swapRSt6threadS0_'/>
<use f='include/c++/10/future' l='1656'/>
<use f='include/c++/10/future' l='1671' c='_ZNSt13__future_base17_Async_state_implC1EOT_'/>
<size>8</size>
<doc f='include/c++/10/thread' l='64'>/**
   * @defgroup threads Threads
   * @ingroup concurrency
   *
   * Classes for thread support.
   * @{
   */

  /// thread</doc>
<mbr r='std::thread::_M_id' o='0' t='std::thread::id'/>
<fun r='_ZNSt6threadC1Ev'/>
<fun r='_ZNSt6threadC1EOT_DpOT0_'/>
<fun r='_ZNSt6threadD1Ev'/>
<fun r='_ZNSt6threadC1ERKS_'/>
<fun r='_ZNSt6threadC1EOS_'/>
<fun r='_ZNSt6threadaSERKS_'/>
<fun r='_ZNSt6threadaSEOS_'/>
<fun r='_ZNSt6thread4swapERS_'/>
<fun r='_ZNKSt6thread8joinableEv'/>
<fun r='_ZNSt6thread4joinEv'/>
<fun r='_ZNSt6thread6detachEv'/>
<fun r='_ZNKSt6thread6get_idEv'/>
<fun r='_ZNSt6thread13native_handleEv'/>
<fun r='_ZNSt6thread20hardware_concurrencyEv'/>
<fun r='_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE'/>
<fun r='_ZNSt6thread13_S_make_stateEDpOT0_'/>
<fun r='_ZNSt6thread14__make_invokerEOT_DpOT0_'/>
