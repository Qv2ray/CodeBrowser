<inh f='include/c++/10/future' l='573' c='_ZNSt13__future_base13_State_baseV217_M_complete_asyncEv'/>
<def f='include/c++/10/future' l='1652' type='void std::__future_base::_Async_state_commonV2::_M_complete_async()'/>
<doc f='include/c++/10/future' l='1637'>// Make waiting functions block until the thread completes, as if joined.
    //
    // This function is used by wait() to satisfy the first requirement below
    // and by wait_for() / wait_until() to satisfy the second.
    //
    // [futures.async]:
    //
    // - a call to a waiting function on an asynchronous return object that
    // shares the shared state created by this async call shall block until
    // the associated thread has completed, as if joined, or else time out.
    //
    // - the associated thread completion synchronizes with the return from
    // the first function that successfully detects the ready status of the
    // shared state or with the return from the last function that releases
    // the shared state, whichever happens first.</doc>
