<def f='qv2ray/3rdparty/uvw/src/uvw/handle.hpp' l='114' ll='116' type='bool uvw::Handle::active() const'/>
<doc f='qv2ray/3rdparty/uvw/src/uvw/handle.hpp' l='95'>/**
	 * @brief Checks if the handle is active.
	 *
	 * What _active_ means depends on the type of handle:
	 *
	 * * An AsyncHandle handle is always active and cannot be deactivated,
	 * except by closing it with uv_close().
	 * * A PipeHandle, TCPHandle, UDPHandle, etc. handle - basically any handle
	 * that deals with I/O - is active when it is doing something that involves
	 * I/O, like reading, writing, connecting, accepting new connections, etc.
	 * * A CheckHandle, IdleHandle, TimerHandle, etc. handle is active when it
	 * has been started with a call to `start()`.
	 *
	 * Rule of thumb: if a handle of type `FooHandle` has a `start()` member
	 * method, then itâ€™s active from the moment that method is called. Likewise,
	 * `stop()` deactivates the handle again.
	 *
	 * @return True if the handle is active, false otherwise.
	 */</doc>
