<dec f='include/google/protobuf/message.h' l='819' type='const RepeatedField&lt;T&gt; &amp; google::protobuf::Reflection::GetRepeatedField(const google::protobuf::Message &amp; , const google::protobuf::FieldDescriptor * ) const'/>
<dec f='include/google/protobuf/message.h' l='1098' type='const RepeatedField&lt;google::protobuf::int32&gt; &amp; google::protobuf::Reflection::GetRepeatedField(const google::protobuf::Message &amp; message, const google::protobuf::FieldDescriptor * field) const'/>
<dec f='include/google/protobuf/message.h' l='1098' type='const RepeatedField&lt;google::protobuf::int64&gt; &amp; google::protobuf::Reflection::GetRepeatedField(const google::protobuf::Message &amp; message, const google::protobuf::FieldDescriptor * field) const'/>
<dec f='include/google/protobuf/message.h' l='1098' type='const RepeatedField&lt;google::protobuf::uint32&gt; &amp; google::protobuf::Reflection::GetRepeatedField(const google::protobuf::Message &amp; message, const google::protobuf::FieldDescriptor * field) const'/>
<dec f='include/google/protobuf/message.h' l='1098' type='const RepeatedField&lt;google::protobuf::uint64&gt; &amp; google::protobuf::Reflection::GetRepeatedField(const google::protobuf::Message &amp; message, const google::protobuf::FieldDescriptor * field) const'/>
<dec f='include/google/protobuf/message.h' l='1098' type='const RepeatedField&lt;float&gt; &amp; google::protobuf::Reflection::GetRepeatedField(const google::protobuf::Message &amp; message, const google::protobuf::FieldDescriptor * field) const'/>
<dec f='include/google/protobuf/message.h' l='1098' type='const RepeatedField&lt;double&gt; &amp; google::protobuf::Reflection::GetRepeatedField(const google::protobuf::Message &amp; message, const google::protobuf::FieldDescriptor * field) const'/>
<dec f='include/google/protobuf/message.h' l='1098' type='const RepeatedField&lt;bool&gt; &amp; google::protobuf::Reflection::GetRepeatedField(const google::protobuf::Message &amp; message, const google::protobuf::FieldDescriptor * field) const'/>
