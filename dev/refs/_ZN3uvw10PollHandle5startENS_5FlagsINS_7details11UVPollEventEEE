<dec f='qv2ray/3rdparty/uvw/src/uvw/poll.h' l='101' type='void uvw::PollHandle::start(Flags&lt;uvw::PollHandle::Event&gt; flags)'/>
<def f='qv2ray/3rdparty/uvw/src/uvw/poll.cpp' l='44' ll='46' type='void uvw::PollHandle::start(Flags&lt;PollHandle::Event&gt; flags)'/>
<use f='qv2ray/3rdparty/uvw/src/uvw/poll.cpp' l='50' u='c' c='_ZN3uvw10PollHandle5startENS_7details11UVPollEventE'/>
<doc f='qv2ray/3rdparty/uvw/src/uvw/poll.h' l='82'>/**
     * @brief Starts polling the file descriptor.
     *
     * Available flags are:
     *
     * * `PollHandle::Event::READABLE`
     * * `PollHandle::Event::WRITABLE`
     * * `PollHandle::Event::DISCONNECT`
     * * `PollHandle::Event::PRIORITIZED`
     *
     * As soon as an event is detected, a PollEvent is emitted by the
     * handle.&lt;br&gt;
     * It could happen that ErrorEvent events are emitted while running.
     *
     * Calling more than once this method will update the flags to which the
     * caller is interested.
     *
     * @param flags The events to which the caller is interested.
     */</doc>
<use f='qv2ray/src/components/latency/RealPing.cpp' l='121' u='c' c='_ZL13handle_socketPviiS_S_'/>
<use f='qv2ray/src/components/latency/unix/ICMPPing.cpp' l='206' u='c' c='_ZN6Qv2ray10components7latency7icmping8ICMPPing4pingEv'/>
