<dec f='include/google/protobuf/io/coded_stream.h' l='425' type='std::pair&lt;CodedInputStream::Limit, int&gt; google::protobuf::io::CodedInputStream::IncrementRecursionDepthAndPushLimit(int byte_limit)'/>
<use f='include/google/protobuf/wire_format_lite_inl.h' l='448' u='c' c='_ZN6google8protobuf8internal14WireFormatLite11ReadMessageEPNS0_2io16CodedInputStreamEPT_'/>
<doc f='include/google/protobuf/io/coded_stream.h' l='420'>// Shorthand for make_pair(PushLimit(byte_limit), --recursion_budget_).
  // Using this can reduce code size and complexity in some cases.  The caller
  // is expected to check that the second part of the result is non-negative (to
  // bail out if the depth of recursion is too high) and, if all is well, to
  // later pass the first part of the result to PopLimit() or similar.</doc>
