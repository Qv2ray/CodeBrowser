<dec f='include/google/protobuf/repeated_field.h' l='808' type='void google::protobuf::RepeatedPtrField::Reserve(int new_size)'/>
<use f='include/google/protobuf/repeated_field.h' l='1906' u='c' c='_ZN6google8protobuf16RepeatedPtrFieldC1ETL0__RKS2_'/>
<def f='include/google/protobuf/repeated_field.h' l='2182' ll='2185' type='void google::protobuf::RepeatedPtrField::Reserve(int new_size)'/>
<doc f='include/google/protobuf/repeated_field.h' l='805'>// Reserve space to expand the field to at least the given size.  This only
  // resizes the pointer array; it doesn&apos;t allocate any objects.  If the
  // array is grown, it will always be at least doubled in size.</doc>
